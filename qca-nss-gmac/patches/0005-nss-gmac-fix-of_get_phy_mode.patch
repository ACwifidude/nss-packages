--- a/ipq806x/nss_gmac_ctrl.c
+++ b/ipq806x/nss_gmac_ctrl.c
@@ -759,6 +759,7 @@ static uint32_t nss_gmac_tstamp_ioctl(st
 {
 	struct hwtstamp_config cfg;
 	struct nss_gmac_dev *gmacdev = (struct nss_gmac_dev *)netdev_priv(netdev);
+	int32_t ret = 0;
 
 	/*
 	 * Return if NSS FW is not up
@@ -767,9 +768,11 @@ static uint32_t nss_gmac_tstamp_ioctl(st
 		netdev_dbg(netdev, "%s: NSS Firmware is not up. Cannot enable Timestamping  \n", __func__);
 		return -EINVAL;
 	}
-
-	copy_from_user(&cfg, ifr->ifr_data, sizeof(cfg));
-
+	ret = copy_from_user(&cfg, ifr->ifr_data, sizeof(cfg));
+	if (ret) {
+		netdev_err(netdev, "%s: Unable to copy NSS Firmware into memory \n", __func__);
+		return -EINVAL;
+	}
 	/*
 	 * Enable Timestamping if not already enabled
 	 */
@@ -994,6 +997,9 @@ static int32_t nss_gmac_of_get_pdata(str
 {
 	struct nss_gmac_dev *gmacdev = (struct nss_gmac_dev *)netdev_priv(netdev);
 	struct resource memres_devtree = {0};
+	phy_interface_t phyif = 0;
+
+
 
 	if (of_property_read_u32(np, "qcom,id", &gmacdev->macid)
 		|| of_property_read_u32(np, "qcom,phy-mdio-addr",
@@ -1019,7 +1025,7 @@ static int32_t nss_gmac_of_get_pdata(str
 
 	of_property_read_u32(np, "qcom,aux-clk-freq", &gmacdev->aux_clk_freq);
 
-	gmaccfg->phy_mii_type = of_get_phy_mode(np);
+	gmaccfg->phy_mii_type = of_get_phy_mode(np, &phyif);
 	netdev->irq = irq_of_parse_and_map(np, 0);
 	if (netdev->irq == NO_IRQ) {
 		pr_err("%s: Can't map interrupt\n", np->name);
