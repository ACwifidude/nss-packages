--- a/exports/nss_dynamic_interface.h
+++ b/exports/nss_dynamic_interface.h
@@ -22,6 +22,8 @@
 #ifndef __NSS_DYNAMIC_INTERFACE_H
 #define __NSS_DYNAMIC_INTERFACE_H
 
+#include "nss_fw_version.h"
+
 /**
  * @addtogroup nss_dynamic_interface_subsystem
  * @{
@@ -101,9 +103,11 @@ enum nss_dynamic_interface_type {
 	NSS_DYNAMIC_INTERFACE_TYPE_RMNET_RX_H2N,
 	NSS_DYNAMIC_INTERFACE_TYPE_WIFILI_EXTERNAL0,
 	NSS_DYNAMIC_INTERFACE_TYPE_WIFILI_EXTERNAL1,
+#if (NSS_FW_VERSION_CODE > NSS_FW_VERSION(11,1))
 	NSS_DYNAMIC_INTERFACE_TYPE_TLS_INNER,
 	NSS_DYNAMIC_INTERFACE_TYPE_TLS_OUTER,
 	NSS_DYNAMIC_INTERFACE_TYPE_MIRROR,
+#endif
 	NSS_DYNAMIC_INTERFACE_TYPE_MAX
 };
 
--- a/nss_hal/nss_hal.c
+++ b/nss_hal/nss_hal.c
@@ -381,13 +381,14 @@ int nss_hal_probe(struct platform_device
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_GENERIC_REDIR_H2N] = nss_dev->id;
 	}
 
+#if (NSS_FW_VERSION_CODE > NSS_FW_VERSION(11,3))
 #ifdef NSS_DRV_CAPWAP_ENABLE
 	if (npd->capwap_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->capwap_handler_id = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_CAPWAP] = nss_dev->id;
 	}
 #endif
-
+#endif
 	if (npd->ipv4_reasm_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->ipv4_reasm_handler_id = nss_dev->id;
 		nss_ipv4_reasm_register_handler();
@@ -646,6 +647,7 @@ int nss_hal_probe(struct platform_device
 		nss_match_init();
 	}
 
+#if (NSS_FW_VERSION_CODE > NSS_FW_VERSION(11,1))
 #ifdef NSS_DRV_TLS_ENABLE
 #if defined(NSS_HAL_IPQ807x_SUPPORT) || defined(NSS_HAL_IPQ60XX_SUPPORT)
 	if (npd->tls_enabled == NSS_FEATURE_ENABLED) {
@@ -662,6 +664,7 @@ int nss_hal_probe(struct platform_device
 		nss_mirror_register_handler();
 		nss_info("%d: NSS mirror is enabled", nss_dev->id);
 	}
+#endif
 
 	if (nss_ctx->id == 0) {
 #if (NSS_FREQ_SCALE_SUPPORT == 1)
--- a/exports/nss_ipv4.h
+++ b/exports/nss_ipv4.h
@@ -26,6 +26,8 @@
 #include "nss_stats_public.h"
 #endif
 
+#include "nss_fw_version.h"
+
 /**
  * @addtogroup nss_ipv4_subsystem
  * @{
--- /dev/null
+++ b/exports/nss_fw_version.h
@@ -0,0 +1,11 @@
+#ifndef __NSS_FW_VERSION_H
+#define __NSS_FW_VERSION_H
+
+#define NSS_FW_VERSION_MAJOR 11
+#define NSS_FW_VERSION_MINOR 0
+
+#define NSS_FW_VERSION(a,b) (((a) << 8) + (b))
+
+#define NSS_FW_VERSION_CODE NSS_FW_VERSION(NSS_FW_VERSION_MAJOR, NSS_FW_VERSION_MINOR)
+
+#endif /* __NSS_FW_VERSION_H */
